version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: focus-academy-postgres
    environment:
      POSTGRES_DB: focus_academy_dev
      POSTGRES_USER: focus_user
      POSTGRES_PASSWORD: focus_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U focus_user -d focus_academy_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: focus-academy-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  api-gateway:
    build:
      context: .
      dockerfile: packages/api-gateway/Dockerfile
    container_name: focus-academy-api-gateway
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://focus_user:focus_password@postgres:5432/focus_academy_dev
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=dev_jwt_secret_change_in_production
      - PORT=4000
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./packages/api-gateway:/app
      - /app/node_modules
    command: npm run dev

  auth-service:
    build:
      context: .
      dockerfile: packages/auth-service/Dockerfile
    container_name: focus-academy-auth-service
    ports:
      - "4001:4001"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://focus_user:focus_password@postgres:5432/focus_academy_dev
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=dev_jwt_secret_change_in_production
      - PORT=4001
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./packages/auth-service:/app
      - /app/node_modules
    command: npm run dev

  kiro-ai-service:
    build:
      context: .
      dockerfile: packages/kiro-ai-service/Dockerfile
    container_name: focus-academy-kiro-ai
    ports:
      - "8001:8001"
    environment:
      - PYTHONPATH=/app
      - DATABASE_URL=postgresql://focus_user:focus_password@postgres:5432/focus_academy_dev
      - REDIS_URL=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./packages/kiro-ai-service:/app
    command: python -m uvicorn main:app --host 0.0.0.0 --port 8001 --reload

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: focus-academy-network